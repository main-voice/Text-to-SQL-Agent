name: Python CI

on:
  push:
    branches: [ "main", "add-cicd-and-sentry" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  env-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Create virtual environment
        run: |
          python -m pip install --upgrade pip
          python -m pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          echo "Virtual environment created."
      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            echo "Installing requirements..."
            pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
            pip install -r requirements.txt
          fi
          pip install pytest pylint flake8

  test-and-lint:
    needs: env-setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create virtual environment
        run: |
          python -m pip install --upgrade pip
          python -m pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          echo "Virtual environment created."
      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            echo "Installing requirements..."
            pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
            pip install -r requirements.txt
          fi
          pip install pytest pylint flake8
      - name: Lint with pylint
        run: |
          pip install pytest pylint flake8
          pip show pylint
          pylint --rcfile=.linting/.pylintrc **/*.py
      - name: Lint with flake8
        run: |
          pip install pytest pylint flake8
          pip show flake8
          flake8 --config=.linting/.flake8 **/*.py
      - name: Run tests
        run: pytest tests/test_db_config.py
